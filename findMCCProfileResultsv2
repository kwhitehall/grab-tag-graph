 -------------- TESTING findMCCs ----------

 Start the timer for the findMCCs process
         14185139 function calls (14182531 primitive calls) in 249.064 seconds

   Ordered by: standard name

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        8    0.000    0.000    0.000    0.000 :0(__new__)
        8    0.004    0.000    0.004    0.000 :0(__reduce_ex__)
       51    0.096    0.002    0.096    0.002 :0(_label)
      102    0.000    0.000    0.000    0.000 :0(abs)
       51    0.000    0.000    0.000    0.000 :0(all)
       51    0.000    0.000    0.008    0.000 :0(any)
   399848    3.076    0.000    3.076    0.000 :0(append)
  1077990    9.729    0.000    9.729    0.000 :0(argmax)
      765    0.768    0.001    0.768    0.001 :0(array)
      102    0.000    0.000    0.000    0.000 :0(astype)
       20    0.000    0.000    0.000    0.000 :0(clear)
      347    0.000    0.000    0.000    0.000 :0(copy)
       51    0.008    0.000    0.008    0.000 :0(count_nonzero)
       51    0.000    0.000    0.000    0.000 :0(empty)
       51    0.004    0.000    0.004    0.000 :0(find_objects)
     3563    0.020    0.000    0.020    0.000 :0(get)
  1289373   13.569    0.000   13.569    0.000 :0(getattr)
      111    0.000    0.000    0.000    0.000 :0(hasattr)
     3955    0.040    0.000    0.040    0.000 :0(id)
      113    0.004    0.000    0.004    0.000 :0(insert)
      153    0.000    0.000    0.000    0.000 :0(intersection)
  1286423   11.849    0.000   11.849    0.000 :0(isinstance)
      161    0.000    0.000    0.000    0.000 :0(issubclass)
     2334    0.076    0.000    0.076    0.000 :0(items)
     2984    0.012    0.000    0.012    0.000 :0(iter)
      653    0.012    0.000    0.012    0.000 :0(iteritems)
      141    0.000    0.000    0.000    0.000 :0(keys)
1285222/1285104    9.613    0.000    9.617    0.000 :0(len)
      153    5.728    0.037   11.349    0.074 :0(max)
      102    5.808    0.057   11.741    0.115 :0(min)
  1771718   10.117    0.000   10.117    0.000 :0(next)
        9    0.000    0.000    0.000    0.000 :0(range)
       51    0.004    0.000    0.004    0.000 :0(ravel)
  204/153    0.008    0.000    0.020    0.000 :0(reduce)
        1    0.008    0.008    0.008    0.008 :0(setprofile)
       16    0.000    0.000    0.008    0.000 :0(sort)
      520    0.008    0.000    0.008    0.000 :0(split)
     3117    0.012    0.000    0.012    0.000 :0(update)
      255    0.004    0.000    0.076    0.000 :0(view)
      102    0.000    0.000    0.000    0.000 :0(zeros)
        1    0.000    0.000  249.056  249.056 <string>:1(<module>)
        1    0.000    0.000    0.000    0.000 <string>:1(connected_component_subgraphs)
        1    0.000    0.000    0.000    0.000 <string>:1(connected_components)
       51    0.000    0.000    0.000    0.000 _methods.py:25(_amax)
       51    0.000    0.000    0.008    0.000 _methods.py:37(_any)
       51    0.000    0.000    0.000    0.000 _methods.py:40(_all)
        9    0.000    0.000    0.012    0.001 connected.py:22(connected_components)
        9    0.000    0.000    0.120    0.013 connected.py:60(connected_component_subgraphs)
 1931/129    0.068    0.000    0.212    0.002 copy.py:145(deepcopy)
      557    0.008    0.000    0.008    0.000 copy.py:198(_deepcopy_atomic)
        8    0.000    0.000    0.004    0.001 copy.py:234(_deepcopy_tuple)
  653/129    0.028    0.000    0.192    0.001 copy.py:253(_deepcopy_dict)
     1226    0.032    0.000    0.048    0.000 copy.py:267(_keep_alive)
        8    0.000    0.000    0.096    0.012 copy.py:306(_reconstruct)
        8    0.000    0.000    0.000    0.000 copy_reg.py:92(__newobj__)
        1    0.000    0.000    0.000    0.000 copy_reg.py:95(_slotnames)
      153    0.004    0.000    0.004    0.000 core.py:1194(_recursive_make_descr)
      153    0.000    0.000    0.008    0.000 core.py:1214(make_mask_descr)
      102    0.000    0.000    0.000    0.000 core.py:1249(getmask)
      102    0.004    0.000    0.024    0.000 core.py:1310(getmaskarray)
       51    0.004    0.000    0.012    0.000 core.py:1431(make_mask)
      102    0.000    0.000    0.008    0.000 core.py:1525(make_mask_none)
       51    0.004    0.000    0.020    0.000 core.py:1574(mask_or)
       51    0.004    0.000    0.024    0.000 core.py:2638(__new__)
      561    0.056    0.000    0.104    0.000 core.py:2763(_update_from)
      408    0.044    0.000    0.112    0.000 core.py:2788(__array_finalize__)
       51    0.004    0.000    0.064    0.001 core.py:2856(__array_wrap__)
       51    0.000    0.000    0.008    0.000 core.py:2905(view)
       51    0.012    0.000    0.040    0.001 core.py:2993(astype)
       51    0.004    0.000    0.044    0.001 core.py:3033(__getitem__)
  1284308   58.496    0.000   93.458    0.000 core.py:3078(__setitem__)
       51    0.000    0.000    0.000    0.000 core.py:3240(_get_mask)
      102    0.000    0.000    0.000    0.000 core.py:3359(_get_data)
       51    0.004    0.000    0.004    0.000 core.py:389(_check_fill_value)
       51    0.000    0.000    0.000    0.000 core.py:549(filled)
      102    0.000    0.000    0.000    0.000 core.py:621(getdata)
      153    0.008    0.000    0.056    0.000 core.py:7306(__call__)
        2    0.000    0.000    0.000    0.000 decorators.py:50(_not_implemented_for)
        5    0.000    0.000    0.000    0.000 digraph.py:1027(clear)
        1    0.000    0.000    0.120    0.120 digraph.py:1096(to_undirected)
      120    0.000    0.000    0.072    0.001 digraph.py:1142(<genexpr>)
        1    0.000    0.000    0.000    0.000 digraph.py:165(__init__)
        5    0.008    0.002    0.008    0.002 digraph.py:275(add_nodes_from)
      226    0.004    0.000    0.004    0.000 digraph.py:427(add_edge)
      423    0.012    0.000    0.012    0.000 digraph.py:660(successors_iter)
      451    0.004    0.000    0.008    0.000 digraph.py:670(predecessors_iter)
      423    0.008    0.000    0.020    0.000 digraph.py:677(successors)
      451    0.000    0.000    0.008    0.000 digraph.py:684(predecessors)
      123    0.004    0.000    0.008    0.000 digraph.py:847(in_degree_iter)
      123    0.000    0.000    0.004    0.000 digraph.py:885(<genexpr>)
      123    0.000    0.000    0.000    0.000 digraph.py:896(out_degree_iter)
      123    0.000    0.000    0.000    0.000 digraph.py:934(<genexpr>)
        5    0.000    0.000    0.008    0.002 digraph.py:945(in_degree)
        5    0.000    0.000    0.000    0.000 digraph.py:987(out_degree)
      102    0.004    0.000    0.012    0.000 fromnumeric.py:1462(shape)
       51    0.000    0.000    0.000    0.000 fromnumeric.py:1852(all)
  1077990   13.333    0.000   23.061    0.000 fromnumeric.py:889(argmax)
        1    0.000    0.000    0.000    0.000 graph.py:1188(adjacency_iter)
        8    0.000    0.000    0.100    0.013 graph.py:1324(copy)
        4    0.000    0.000    0.000    0.000 graph.py:1350(is_multigraph)
        4    0.000    0.000    0.000    0.000 graph.py:1355(is_directed)
        8    0.004    0.000    0.008    0.001 graph.py:1445(subgraph)
       10    0.000    0.000    0.000    0.000 graph.py:175(__init__)
       18    0.000    0.000    0.000    0.000 graph.py:1753(nbunch_iter)
      381    0.008    0.000    0.008    0.000 graph.py:1799(bunch_iter)
        1    0.000    0.000    0.000    0.000 graph.py:219(name)
        1    0.000    0.000    0.000    0.000 graph.py:222(name)
       17    0.000    0.000    0.000    0.000 graph.py:242(__iter__)
       28    0.000    0.000    0.000    0.000 graph.py:257(__contains__)
      118    0.004    0.000    0.004    0.000 graph.py:273(__len__)
      127    0.004    0.000    0.004    0.000 graph.py:291(__getitem__)
        1    0.000    0.000    0.000    0.000 graph.py:380(add_nodes_from)
     2092    0.028    0.000    0.112    0.000 graph.py:525(nodes_iter)
     2092    0.056    0.000    0.168    0.000 graph.py:560(nodes)
        1    0.004    0.004    0.080    0.080 graph.py:719(add_edges_from)
      102    0.000    0.000    0.000    0.000 index_tricks.py:502(__init__)
  1771718   20.781    0.000   30.898    0.000 index_tricks.py:505(__next__)
      102    0.000    0.000    0.000    0.000 index_tricks.py:519(__iter__)
       51    0.000    0.000    0.000    0.000 index_tricks.py:650(__getitem__)
      183    0.004    0.000    0.028    0.000 mccSearch.py:1164(is_there_a_link)
      175    0.008    0.000    0.008    0.000 mccSearch.py:1196(<genexpr>)
      387    0.004    0.000    0.004    0.000 mccSearch.py:1210(<genexpr>)
     1906    0.100    0.000    0.248    0.000 mccSearch.py:1290(this_dict)
       51   62.380    1.223  248.368    4.870 mccSearch.py:1306(check_criteria)
   538944    2.956    0.000    2.956    0.000 mccSearch.py:1323(<genexpr>)
   538944    2.760    0.000    2.760    0.000 mccSearch.py:1324(<genexpr>)
   538944    2.976    0.000    2.976    0.000 mccSearch.py:1325(<genexpr>)
   538944    2.860    0.000    2.860    0.000 mccSearch.py:1326(<genexpr>)
        5    0.000    0.000    0.008    0.002 mccSearch.py:1386(has_merges_or_splits)
        1    0.000    0.000    0.000    0.000 mccSearch.py:1404(<lambda>)
       23    0.000    0.000    0.000    0.000 mccSearch.py:1405(<lambda>)
       22    0.040    0.002    0.048    0.002 mccSearch.py:1457(add_info_this_dict)
      118    0.012    0.000    0.016    0.000 mccSearch.py:1474(add_node_behavior_identifier)
       23    0.000    0.000    0.004    0.000 mccSearch.py:1491(add_node_MCS_identifier)
       29    0.004    0.000  248.644    8.574 mccSearch.py:1589(bothCriteriaCheck)
        1    0.000    0.000  249.056  249.056 mccSearch.py:704(find_MCC)
      118    0.000    0.000    0.008    0.000 mccSearch.py:748(<lambda>)
        1    0.000    0.000    0.000    0.000 mccSearch.py:793(<genexpr>)
    118/5    0.008    0.000    0.020    0.004 mccSearch.py:867(traverse_tree)
        5    0.024    0.005  248.728   49.746 mccSearch.py:915(checked_nodes_MCC)
      118    0.004    0.000    0.036    0.000 mccSearch.py:981(update_MCC_list)
       51    0.012    0.000    0.024    0.000 measurements.py:205(find_objects)
       51    0.008    0.000    0.884    0.017 measurements.py:46(label)
      408    0.016    0.000    0.784    0.002 numeric.py:394(asarray)
      102    0.000    0.000    0.000    0.000 numeric.py:464(asanyarray)
        1    0.000    0.000  249.064  249.064 profile:0(mccSearch.find_MCC(prunedGraph))
        0    0.000             0.000          profile:0(profiler)
      102    0.012    0.000    0.016    0.000 type_check.py:237(iscomplexobj)
        8    0.004    0.001    0.012    0.001 unweighted.py:23(single_source_shortest_path_length)
   745466   11.245    0.000   26.898    0.000 utils.py:124(maenumerate)


Traceback (most recent call last):
  File "baselineTiming.py", line 176, in <module>
    main()
  File "baselineTiming.py", line 152, in main
    MCCList,MCSList = profile.runctx('mccSearch.find_MCC(prunedGraph)', globals(), {'mccSearch' : mccSearch, 'prunedGraph' : prunedGraph})
TypeError: 'NoneType' object is not iterable
