 -------------- TESTING findMCCs ----------

 Start the timer for the findMCCs process
         22119701 function calls (22117087 primitive calls) in 411.246 seconds

   Ordered by: standard name

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        8    0.000    0.000    0.000    0.000 :0(__new__)
        8    0.000    0.000    0.000    0.000 :0(__reduce_ex__)
       57    0.152    0.003    0.168    0.003 :0(_label)
      114    0.000    0.000    0.000    0.000 :0(abs)
       57    0.000    0.000    0.004    0.000 :0(all)
       57    0.000    0.000    0.008    0.000 :0(any)
   469791    4.256    0.000    4.256    0.000 :0(append)
  1561846   15.493    0.000   15.493    0.000 :0(argmax)
      855    1.264    0.001    1.264    0.001 :0(array)
      114    0.004    0.000    0.004    0.000 :0(astype)
       20    0.000    0.000    0.000    0.000 :0(clear)
      359    0.004    0.000    0.004    0.000 :0(copy)
       57    0.028    0.000    0.028    0.000 :0(count_nonzero)
       57    0.000    0.000    0.000    0.000 :0(empty)
       14    0.000    0.000    0.000    0.000 :0(extend)
       57    0.020    0.000    0.020    0.000 :0(find_objects)
     3569    0.020    0.000    0.020    0.000 :0(get)
  2006905   22.397    0.000   22.397    0.000 :0(getattr)
      123    0.000    0.000    0.000    0.000 :0(hasattr)
     3955    0.028    0.000    0.028    0.000 :0(id)
      113    0.000    0.000    0.000    0.000 :0(insert)
      171    0.004    0.000    0.004    0.000 :0(intersection)
  2003607   18.937    0.000   18.937    0.000 :0(isinstance)
      179    0.000    0.000    0.000    0.000 :0(issubclass)
      644    0.016    0.000    0.016    0.000 :0(items)
     1371    0.004    0.000    0.004    0.000 :0(iter)
      653    0.008    0.000    0.008    0.000 :0(iteritems)
      235    0.000    0.000    0.000    0.000 :0(keys)
2002209/2002091   15.773    0.000   15.773    0.000 :0(len)
      171    8.621    0.050   17.381    0.102 :0(max)
      114    8.837    0.078   18.269    0.160 :0(min)
  3065826   18.893    0.000   18.893    0.000 :0(next)
       10    0.000    0.000    0.000    0.000 :0(range)
       57    0.000    0.000    0.000    0.000 :0(ravel)
  228/171    0.020    0.000    0.032    0.000 :0(reduce)
        1    0.004    0.004    0.004    0.004 :0(setprofile)
       31    0.004    0.000    0.004    0.000 :0(sort)
      764    0.004    0.000    0.004    0.000 :0(split)
     3411    0.036    0.000    0.036    0.000 :0(update)
      285    0.016    0.000    0.092    0.000 :0(view)
      114    0.000    0.000    0.000    0.000 :0(zeros)
        1    0.000    0.000  411.242  411.242 <string>:1(<module>)
        1    0.000    0.000    0.000    0.000 <string>:1(connected_component_subgraphs)
        1    0.000    0.000    0.000    0.000 <string>:1(connected_components)
       57    0.000    0.000    0.008    0.000 _methods.py:25(_amax)
       57    0.004    0.000    0.008    0.000 _methods.py:37(_any)
       57    0.000    0.000    0.004    0.000 _methods.py:40(_all)
        9    0.000    0.000    0.004    0.000 connected.py:22(connected_components)
        9    0.000    0.000    0.140    0.016 connected.py:60(connected_component_subgraphs)
 1931/129    0.052    0.000    0.192    0.001 copy.py:145(deepcopy)
      557    0.000    0.000    0.000    0.000 copy.py:198(_deepcopy_atomic)
        8    0.000    0.000    0.000    0.000 copy.py:234(_deepcopy_tuple)
  653/129    0.036    0.000    0.184    0.001 copy.py:253(_deepcopy_dict)
     1226    0.036    0.000    0.048    0.000 copy.py:267(_keep_alive)
        8    0.000    0.000    0.128    0.016 copy.py:306(_reconstruct)
        8    0.000    0.000    0.000    0.000 copy_reg.py:92(__newobj__)
        1    0.000    0.000    0.000    0.000 copy_reg.py:95(_slotnames)
      171    0.004    0.000    0.004    0.000 core.py:1194(_recursive_make_descr)
      171    0.004    0.000    0.008    0.000 core.py:1214(make_mask_descr)
      114    0.000    0.000    0.000    0.000 core.py:1249(getmask)
      114    0.000    0.000    0.020    0.000 core.py:1310(getmaskarray)
       57    0.000    0.000    0.008    0.000 core.py:1431(make_mask)
      114    0.004    0.000    0.012    0.000 core.py:1525(make_mask_none)
       57    0.008    0.000    0.016    0.000 core.py:1574(mask_or)
       57    0.008    0.000    0.032    0.001 core.py:2638(__new__)
      627    0.064    0.000    0.124    0.000 core.py:2763(_update_from)
      456    0.028    0.000    0.132    0.000 core.py:2788(__array_finalize__)
       57    0.000    0.000    0.068    0.001 core.py:2856(__array_wrap__)
       57    0.000    0.000    0.020    0.000 core.py:2905(view)
       57    0.004    0.000    0.032    0.001 core.py:2993(astype)
       57    0.000    0.000    0.040    0.001 core.py:3033(__getitem__)
  2001246   96.626    0.000  153.682    0.000 core.py:3078(__setitem__)
       57    0.000    0.000    0.000    0.000 core.py:3240(_get_mask)
      114    0.004    0.000    0.004    0.000 core.py:3359(_get_data)
       57    0.004    0.000    0.004    0.000 core.py:389(_check_fill_value)
       57    0.000    0.000    0.000    0.000 core.py:549(filled)
      114    0.004    0.000    0.004    0.000 core.py:621(getdata)
      171    0.016    0.000    0.080    0.000 core.py:7306(__call__)
        2    0.000    0.000    0.000    0.000 decorators.py:50(_not_implemented_for)
        5    0.000    0.000    0.000    0.000 digraph.py:1027(clear)
        1    0.004    0.004    0.088    0.088 digraph.py:1096(to_undirected)
      120    0.004    0.000    0.052    0.000 digraph.py:1142(<genexpr>)
        1    0.000    0.000    0.000    0.000 digraph.py:165(__init__)
        5    0.000    0.000    0.004    0.001 digraph.py:275(add_nodes_from)
      226    0.000    0.000    0.000    0.000 digraph.py:427(add_edge)
      440    0.008    0.000    0.008    0.000 digraph.py:660(successors_iter)
      511    0.020    0.000    0.024    0.000 digraph.py:670(predecessors_iter)
      440    0.012    0.000    0.020    0.000 digraph.py:677(successors)
      511    0.000    0.000    0.024    0.000 digraph.py:684(predecessors)
      123    0.000    0.000    0.000    0.000 digraph.py:847(in_degree_iter)
      123    0.000    0.000    0.000    0.000 digraph.py:885(<genexpr>)
      123    0.000    0.000    0.004    0.000 digraph.py:896(out_degree_iter)
      123    0.000    0.000    0.004    0.000 digraph.py:934(<genexpr>)
        5    0.000    0.000    0.000    0.000 digraph.py:945(in_degree)
        5    0.000    0.000    0.004    0.001 digraph.py:987(out_degree)
      114    0.004    0.000    0.004    0.000 fromnumeric.py:1462(shape)
       57    0.000    0.000    0.008    0.000 fromnumeric.py:1852(all)
  1561846   19.549    0.000   35.042    0.000 fromnumeric.py:889(argmax)
       14    0.000    0.000    0.000    0.000 graph.py:1114(get_edge_data)
        1    0.000    0.000    0.000    0.000 graph.py:1188(adjacency_iter)
        8    0.000    0.000    0.128    0.016 graph.py:1324(copy)
        4    0.000    0.000    0.000    0.000 graph.py:1350(is_multigraph)
        4    0.000    0.000    0.000    0.000 graph.py:1355(is_directed)
        8    0.000    0.000    0.008    0.001 graph.py:1445(subgraph)
       10    0.000    0.000    0.000    0.000 graph.py:175(__init__)
       18    0.004    0.000    0.004    0.000 graph.py:1753(nbunch_iter)
      381    0.004    0.000    0.008    0.000 graph.py:1799(bunch_iter)
        1    0.000    0.000    0.000    0.000 graph.py:219(name)
        1    0.000    0.000    0.000    0.000 graph.py:222(name)
       17    0.004    0.000    0.004    0.000 graph.py:242(__iter__)
       28    0.000    0.000    0.000    0.000 graph.py:257(__contains__)
      118    0.000    0.000    0.000    0.000 graph.py:273(__len__)
      127    0.000    0.000    0.000    0.000 graph.py:291(__getitem__)
        1    0.004    0.004    0.004    0.004 graph.py:380(add_nodes_from)
      402    0.008    0.000    0.024    0.000 graph.py:525(nodes_iter)
      402    0.024    0.000    0.048    0.000 graph.py:560(nodes)
        1    0.004    0.004    0.064    0.064 graph.py:719(add_edges_from)
      114    0.000    0.000    0.000    0.000 index_tricks.py:502(__init__)
  3065826   37.758    0.000   56.652    0.000 index_tricks.py:505(__next__)
      114    0.000    0.000    0.000    0.000 index_tricks.py:519(__iter__)
       57    0.000    0.000    0.000    0.000 index_tricks.py:650(__getitem__)
      118    0.008    0.000    0.092    0.001 mccSearch.py:1031(update_MCC_list)
      246    0.048    0.000    0.076    0.000 mccSearch.py:1214(is_there_a_link)
     1769    0.004    0.000    0.004    0.000 mccSearch.py:1246(<genexpr>)
     2779    0.016    0.000    0.016    0.000 mccSearch.py:1260(<genexpr>)
      118    0.000    0.000    0.024    0.000 mccSearch.py:1340(this_dict)
       57  103.943    1.824  410.710    7.205 mccSearch.py:1356(check_criteria)
   780866    4.744    0.000    4.744    0.000 mccSearch.py:1373(<genexpr>)
   780866    4.408    0.000    4.408    0.000 mccSearch.py:1374(<genexpr>)
   780866    4.688    0.000    4.688    0.000 mccSearch.py:1375(<genexpr>)
   780866    4.344    0.000    4.344    0.000 mccSearch.py:1376(<genexpr>)
        5    0.000    0.000    0.004    0.001 mccSearch.py:1436(has_merges_or_splits)
        1    0.000    0.000    0.000    0.000 mccSearch.py:1454(<lambda>)
       23    0.000    0.000    0.000    0.000 mccSearch.py:1455(<lambda>)
       26    0.000    0.000    0.012    0.000 mccSearch.py:1507(add_info_this_dict)
      118    0.012    0.000    0.020    0.000 mccSearch.py:1524(add_node_behavior_identifier)
      117    0.012    0.000    0.016    0.000 mccSearch.py:1541(add_node_MCS_identifier)
        1    0.020    0.020  411.242  411.242 mccSearch.py:704(find_MCC)
      118    0.000    0.000    0.000    0.000 mccSearch.py:748(<lambda>)
       30    0.004    0.000    0.004    0.000 mccSearch.py:793(<genexpr>)
       21    0.000    0.000    0.000    0.000 mccSearch.py:794(<lambda>)
       26    0.000    0.000    0.000    0.000 mccSearch.py:798(<genexpr>)
       19    0.000    0.000    0.000    0.000 mccSearch.py:799(<lambda>)
    118/5    0.008    0.000    0.028    0.006 mccSearch.py:867(traverse_tree)
        5    0.060    0.012  410.898   82.180 mccSearch.py:915(checked_nodes_MCC)
       57    0.004    0.000    0.036    0.001 measurements.py:205(find_objects)
       57    0.012    0.000    1.436    0.025 measurements.py:46(label)
      456    0.004    0.000    1.260    0.003 numeric.py:394(asarray)
      114    0.004    0.000    0.012    0.000 numeric.py:464(asanyarray)
        1    0.000    0.000  411.246  411.246 profile:0(mccSearch.find_MCC(prunedGraph))
        0    0.000             0.000          profile:0(profiler)
      114    0.000    0.000    0.000    0.000 type_check.py:237(iscomplexobj)
        8    0.004    0.000    0.004    0.000 unweighted.py:23(single_source_shortest_path_length)
  1220494   19.737    0.000   48.511    0.000 utils.py:124(maenumerate)


Traceback (most recent call last):
  File "baselineTiming.py", line 176, in <module>
    main()
  File "baselineTiming.py", line 152, in main
    MCCList,MCSList = profile.runctx('mccSearch.find_MCC(prunedGraph)', globals(), {'mccSearch' : mccSearch, 'prunedGraph' : prunedGraph})
TypeError: 'NoneType' object is not iterable
